# -*- coding: utf-8 -*-
"""RDFlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wWKAHq7oe6Ea3arTFVJNc-5iiLgBTomC
"""


from rdflib import *

# Create an RDF graph
g = Graph()

# Create a prefix
ns_iut = Namespace("https://cours.iut-orsay.fr/npbd/")
g.bind("iut", ns_iut)

# Add triples to the graph
s1 = URIRef("https://cours.iut-orsay.fr/npbd/jr")
p1 = URIRef("https://cours.iut-orsay.fr/npbd/firstName")
o1 = Literal("Joe")
g.add((s1, p1, o1))

s2 = URIRef("https://cours.iut-orsay.fr/npbd/jr")
p2 = URIRef("https://cours.iut-orsay.fr/npbd/lastName")
o2 = Literal("Raad")
g.add((s2, p2, o2))


# Serialize the graph in Turtle format
turtle_data = g.serialize(format="turtle")

# Print the serialized data
print(turtle_data)

from rdflib import Graph, URIRef, Literal
from rdflib.plugins.stores.sparqlstore import SPARQLStore
import matplotlib.pyplot as plt

# Create an RDF graph
g = Graph()


# Query the triple store using SPARQL
sparql_query = """
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?year ?population
WHERE {
  SERVICE <https://query.wikidata.org/bigdata/namespace/wdq/sparql> {
   wd:Q142 p:P1082 ?statement .
  ?statement ps:P1082 ?population ;
             pq:P585 ?date
  BIND(year(?date) AS ?year)
  FILTER(?year > 2010)
  } } ORDER BY ?year

"""

results = g.query(sparql_query)
x_values = []
y_values = []
for row in results:
    x_values.append(row.year)
    y_values.append(row.population)
    print(row.year + ' / '  + row.population)
    print(" --- ")

# Create a line plot
plt.plot(x_values, y_values, label='Population / Year')

# Add labels and a title
plt.xlabel('Year')
plt.ylabel('Population')
plt.title('Population / Year')

# Add a legend
plt.legend()

# Show the plot
plt.show()

